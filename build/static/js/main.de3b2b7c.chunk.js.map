{"version":3,"sources":["components/Filter.js","services/numbers.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","setNewFilter","value","onChange","e","target","baseUrl","axios","get","then","response","data","newContact","post","id","updatedContact","console","log","put","delete","PersonForm","props","tools","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNotification","onSubmit","preventDefault","duplicate","name","number","find","window","confirm","numbersService","map","p","message","type","setTimeout","catch","err","contact","concat","DeleteButton","onClick","success","filter","Persons","people","person","toLowerCase","includes","Notification","notification","className","App","useState","useEffect","contacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de3b2b7c.chunk.js","sourcesContent":["const Filter = ({ newFilter, setNewFilter }) => {\n  return (\n    <div>\n      <h3>Filter</h3>\n      filter shown with{\" \"}\n      <input\n        value={newFilter}\n        onChange={(e) => {\n          setNewFilter(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addNew = (newContact) => {\n  const request = axios.post(baseUrl, newContact);\n  return request.then((response) => response.data);\n};\n\nconst updateNumber = (id, updatedContact) => {\n  console.log(id, updatedContact);\n  const request = axios.put(`${baseUrl}/${id}`, updatedContact);\n  return request.then((response) => response.data);\n}\n\nconst deleteNumber = (id) => {\n  console.log(\"deleting number\", id);\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((response) => response.data);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, addNew, updateNumber, deleteNumber };\n","import numbersService from \"../services/numbers\";\n\nconst PersonForm = (props) => {\n  const [\n    persons,\n    setPersons,\n    newName,\n    setNewName,\n    newNumber,\n    setNewNumber,\n    setNotification\n  ] = props.tools;\n\n  const addNew = (e) => {\n    e.preventDefault();\n\n    const newContact = {\n      name: newName,\n      number: newNumber,\n    };\n\n    let duplicate = \"\";\n    duplicate = persons.find(({ name }) => name === newName);\n    console.log(duplicate);\n\n    if (duplicate) {\n      if (\n        window.confirm(\n          `The name ${newName} already exists. WOuld you like to replace the old number with a new one?`\n        )\n      ) {\n        numbersService\n          .updateNumber(duplicate.id, newContact)\n          .then((updatedContact) => {\n            setPersons(\n              persons.map((p) => (p.id !== duplicate.id ? p : updatedContact))\n            );\n            setNotification({message:`Added ${newName}`, type:\"info\"});\n            setTimeout(() => {\n              setNotification({message:null, type:null})\n            }, 5000);\n          }).catch(err=>{\n            setNotification({message:`${newName} has already been removed from server`, type:\"error\"});\n            setTimeout(() => {\n              setNotification({message:null, type:null})\n            }, 5000);            \n          });\n      }\n    } else {\n      numbersService\n        .addNew(newContact)\n        .then((contact) => {\n          setPersons(persons.concat(contact))\n          setNotification({message:`Added ${newName}`, type:\"success\"});\n          setTimeout(() => {\n            setNotification({message:null, type:null})\n          }, 5000);\n        });\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={addNew}>\n      <div>\n        name:{\" \"}\n        <input\n          value={newName}\n          onChange={(e) => {\n            setNewName(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={(e) => {\n            setNewNumber(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import numbersService from \"../services/numbers\";\n\nconst DeleteButton = ({ id, persons, setPersons, setNotification }) => {\n  return (\n    <button\n      onClick={() => {\n        if (window.confirm(`are you sure?`)) {\n          numbersService\n            .deleteNumber(id)\n            .then((success) => {\n              console.log(success);\n              setNotification({ message: `${persons.find(p => p.id === id).name} deleted on server`, type: \"info\" });\n              setTimeout(() => {\n                setNotification({ message: null, type: null });\n              }, 5000);\n              setPersons(persons.filter((p) => p.id !== id));\n            })\n            .catch((err) => {\n              setNotification({ message: `${persons.find(p => p.id === id).name} already deleted on server`, type: \"error\" });\n              setTimeout(() => {\n                setNotification({ message: null, type: null });\n              }, 5000);\n              setPersons(persons.filter((p) => p.id !== id));\n            });\n        }\n      }}\n    >\n      delete\n    </button>\n  );\n};\n\nconst Persons = ({ persons, setPersons, filter, setNotification }) => {\n  let people = \"\";\n  if (filter === \"\") {\n    people = persons.map((person) => (\n      <p key={person.name}>\n        {person.name} : {person.number}{\" \"}\n        <DeleteButton\n          id={person.id}\n          persons={persons}\n          setPersons={setPersons}\n          setNotification={setNotification}\n        />\n      </p>\n    ));\n  } else {\n    people = persons.filter(({ name, number }) => {\n      if (name.toLowerCase().includes(filter.toLowerCase())) return true;\n      else return false;\n    });\n    people = people.map((person) => (\n      <p key={person.name}>\n        {person.name} : {person.number}{\" \"}\n        <DeleteButton\n          id={person.id}\n          persons={persons}\n          setPersons={setPersons}\n          setNotification={setNotification}\n        />\n      </p>\n    ));\n  }\n  return <div>{people}</div>;\n};\n\nexport default Persons;\n","const Notification = ({ notification }) => {\n  return notification.type ? (\n    <div className={\"alert \" + notification.type}>{notification.message}</div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default Notification;\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\n\nimport Notification from './components/Notification'\n\nimport numbersService from './services/numbers';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n\n  const [notification, setNotification] = useState({message:null, type:null})\n\n  const hook = () => {\n    numbersService.getAll().then(contacts => {\n      console.log(contacts);\n      setPersons(contacts)\n    })\n  }\n\n  useEffect(hook,[]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification}/>\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\n      <h2>Add a new</h2>\n      <PersonForm\n        tools={[\n          persons,\n          setPersons,\n          newName,\n          setNewName,\n          newNumber,\n          setNewNumber,\n          setNotification\n        ]}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} filter={newFilter} setNotification={setNotification} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport './index.css'\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}